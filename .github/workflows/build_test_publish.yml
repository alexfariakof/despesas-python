name: Build, Test and Publish Project Production In AWS
on:
  push:
    branches: [ "main" ]
jobs:
    build_and_test:  
      name: Build and Test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
              python-version: "3.10"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          continue-on-error: false

        - name: Lint with flake8
          run: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          continue-on-error: false

        - name: Test with pytest
          run: |
            pytest
          continue-on-error: false

    build_test_code_in_sonar:
      needs: build_and_test
      name: SonarCloud Build and Test Code
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          continue-on-error: false
    
    deploy:
      needs: build_test_code_in_sonar
      name: Docker Build and Publish in Production
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        env:
           DOCKER_CLI_AGGREGATE: 1  
        run: |          
          docker-compose build          
        continue-on-error: false

      - name: Push Docker image to Docker Hub
        env:
           DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
           DOCKER_CLI_AGGREGATE: 1  
        run: |
            docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}    
            docker push ${{ secrets.DOCKER_IMAGE }}
        continue-on-error: false
        
      - name: Execute SSH Commands into EC2 
        env:
           EC2_HOST: ${{ secrets.EC2_HOST }}
           EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
           AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
           DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |            
            IMAGEM="${{ secrets.DOCKER_IMAGE }}"
            container_id=$(docker ps -a -q --filter "ancestor=$IMAGEM")
            image_id=$(docker images --format "{{.ID}}" "$IMAGEM")
            docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}    
            docker rm --force $container_id
            docker rmi --force $image_id
            docker pull $IMAGEM            
            docker run -d -p 4000:4000 $IMAGEM     
